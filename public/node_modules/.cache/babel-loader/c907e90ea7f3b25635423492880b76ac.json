{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Bureau\\\\DossiersImportants\\\\ChatApp\\\\public\\\\src\\\\components\\\\ChatContainer.js\",\n    _s = $RefreshSig$();\n\nimport Message from '../components/Message';\nimport React, { useState, useEffect } from 'react';\nimport ChatInput from '../components/ChatInput';\nimport axios from 'axios';\nimport { sendMessageRoute, getAllMessagesRoute } from \"../utils/APIRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer(_ref) {\n  _s();\n\n  let {\n    currentChat,\n    currentUser\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await axios.post(getAllMessagesRoute, {\n        from: currentUser._id,\n        to: currentChat._id\n      });\n      setMessages(response.data);\n    }\n\n    fetchData();\n  }, [currentChat]);\n\n  const handleSendMsg = async msg => {\n    // alert(msg);\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    }); // const msgs = [...messages];\n    // msgs.push({ fromSelf: true, message: msg });\n    // setMessages(msgs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-y-scroll pr-2.5 scrollbar-none\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"assets/profil/9.jpeg\",\n          alt: \"Logo\",\n          className: \"rounded-full h-8 w-8 object-cover mr-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: currentChat && currentChat.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages && messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: message.message\n          }, message.sender, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 31\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      handleSendMsg: handleSendMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatContainer, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = ChatContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Bureau/DossiersImportants/ChatApp/public/src/components/ChatContainer.js"],"names":["Message","React","useState","useEffect","ChatInput","axios","sendMessageRoute","getAllMessagesRoute","ChatContainer","currentChat","currentUser","messages","setMessages","fetchData","response","post","from","_id","to","data","handleSendMsg","msg","message","username","map","sender"],"mappings":";;;AACA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAAyBC,mBAAzB,QAAmD,oBAAnD;;;AAEA,eAAe,SAASC,aAAT,OAAkD;AAAA;;AAAA,MAA3B;AAACC,IAAAA,WAAD;AAAaC,IAAAA;AAAb,GAA2B;AAC/D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAI;AAAC,mBAAeU,SAAf,GAA2B;AACvC,YAAMC,QAAQ,GAAC,MAAMT,KAAK,CAACU,IAAN,CAAWR,mBAAX,EAA+B;AACnDS,QAAAA,IAAI,EAAEN,WAAW,CAACO,GADiC;AAEnDC,QAAAA,EAAE,EAAET,WAAW,CAACQ;AAFmC,OAA/B,CAArB;AAIAL,MAAAA,WAAW,CAACE,QAAQ,CAACK,IAAV,CAAX;AACA;;AACDN,IAAAA,SAAS;AACV,GARQ,EAQP,CAACJ,WAAD,CARO,CAAT;;AASA,QAAMW,aAAa,GAAC,MAAOC,GAAP,IAAa;AAC7B;AACA,UAAMhB,KAAK,CAACU,IAAN,CAAWT,gBAAX,EAA6B;AACjCU,MAAAA,IAAI,EAAEN,WAAW,CAACO,GADe;AAEjCC,MAAAA,EAAE,EAAET,WAAW,CAACQ,GAFiB;AAGjCK,MAAAA,OAAO,EAAED;AAHwB,KAA7B,CAAN,CAF6B,CAO/B;AACA;AACA;AACD,GAVD;;AAWA,sBACE;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,8BACQ;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAC,sBAAT;AAAgC,UAAA,GAAG,EAAC,MAApC;AAA2C,UAAA,SAAS,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,oBAA+BZ,WAAW,IAAIA,WAAW,CAACc;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAKY;AAAA,kBAEIZ,QAAQ,IAAIA,QAAQ,CAACa,GAAT,CAAcF,OAAD,IAAW;AAChC,8BACE;AAAA,sBACGA,OAAO,CAACA;AADX,aAAUA,OAAO,CAACG,MAAlB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKH,SANW;AAFhB;AAAA;AAAA;AAAA;AAAA,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAsBI,QAAC,SAAD;AAAW,MAAA,aAAa,EAAEL;AAA1B;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA,kBADF;AA0BD;;GAhDuBZ,a;;KAAAA,a","sourcesContent":["\r\nimport Message from '../components/Message';\r\nimport React,{useState,useEffect} from 'react';\r\n\r\nimport ChatInput from '../components/ChatInput';\r\nimport axios from 'axios';\r\nimport {sendMessageRoute,getAllMessagesRoute} from \"../utils/APIRoutes\";\r\n\r\nexport default function ChatContainer({currentChat,currentUser}) {\r\n  const [messages, setMessages] = useState([]);\r\n  useEffect(()=>{async function fetchData() {\r\n     const response=await axios.post(getAllMessagesRoute,{\r\n      from: currentUser._id,\r\n      to: currentChat._id,\r\n     })\r\n     setMessages(response.data);\r\n    }\r\n    fetchData();\r\n  },[currentChat]);\r\n  const handleSendMsg=async (msg)=>{\r\n      // alert(msg);\r\n      await axios.post(sendMessageRoute, {\r\n        from: currentUser._id,\r\n        to: currentChat._id,\r\n        message: msg,\r\n      });\r\n    // const msgs = [...messages];\r\n    // msgs.push({ fromSelf: true, message: msg });\r\n    // setMessages(msgs);\r\n  }\r\n  return (\r\n    <>\r\n        <div className=\"overflow-y-scroll pr-2.5 scrollbar-none\">\r\n                <div className='flex'>\r\n                    <img src=\"assets/profil/9.jpeg\" alt=\"Logo\" className=\"rounded-full h-8 w-8 object-cover mr-5\"/>\r\n                    <span className=\"font-medium\">{currentChat && currentChat.username}</span>\r\n                </div>\r\n                    <div>\r\n                      {\r\n                        messages && messages.map((message)=>{\r\n                            return (\r\n                              <div key={message.sender}>\r\n                                {message.message}\r\n                              </div>\r\n                            )\r\n                        })\r\n                      }\r\n                      {/* <Message/>\r\n                      <Message own={true}/>\r\n                      <Message/>\r\n                      <Message/> */}\r\n                    </div>\r\n        </div> \r\n        <ChatInput handleSendMsg={handleSendMsg}/>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}