{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Bureau\\\\DossiersImportants\\\\ChatApp\\\\public\\\\src\\\\pages\\\\SetAvatar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Buffer from 'Buffer';\nimport axios from 'axios';\nimport { setAvatarRoute } from '../utils/APIRoutes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatarProfile() {\n  _s();\n\n  const api = `https://api.multiavatar.com/4645646`;\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    autoClose: 8000,\n    pauseOnOver: true,\n    draggable: true,\n    theme: \"light\"\n  };\n\n  const setProfilePicture = async () => {};\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = [];\n\n      for (let i = 0; i < 4; i++) {\n        const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n        const buffer = new Buffer(image.data);\n        data.push(buffer.toString(\"base64\"));\n      }\n\n      setAvatars(data);\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an Avatar as your profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png+xml;base64,${avatar}`,\n              alt: \"avatar\",\n              onClick: () => setSelectedAvatar(index)\n            }, avatar, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SetAvatarProfile, \"Vf3bLGWNS+p8++1hLS4MtcrCzCs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SetAvatarProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetAvatarProfile\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Bureau/DossiersImportants/ChatApp/public/src/pages/SetAvatar.jsx"],"names":["React","useState","useEffect","useNavigate","ToastContainer","Buffer","axios","setAvatarRoute","SetAvatarProfile","api","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","autoClose","pauseOnOver","draggable","theme","setProfilePicture","fetchData","data","i","image","get","Math","round","random","buffer","push","toString","map","avatar","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,OAAO,uCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,eAAe,SAASC,gBAAT,GAA6B;AAAA;;AAC1C,QAAMC,GAAG,GAAI,qCAAb;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAACgB,SAAD,CAApD;AACE,QAAMC,YAAY,GAAE;AAChBC,IAAAA,SAAS,EAAC,IADM;AAEhBC,IAAAA,WAAW,EAAC,IAFI;AAGhBC,IAAAA,SAAS,EAAC,IAHM;AAIhBC,IAAAA,KAAK,EAAC;AAJU,GAApB;;AAOA,QAAMC,iBAAiB,GAAC,YAAS,CAAE,CAAnC;;AACArB,EAAAA,SAAS,CAAC,MAAM;AAAC,mBAAesB,SAAf,GAA2B;AACxC,YAAMC,IAAI,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAMC,KAAK,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CACjB,GAAEnB,GAAI,IAAGoB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAiC,EADzB,CAApB;AAGA,cAAMC,MAAM,GAAG,IAAI3B,MAAJ,CAAWsB,KAAK,CAACF,IAAjB,CAAf;AACAA,QAAAA,IAAI,CAACQ,IAAL,CAAUD,MAAM,CAACE,QAAP,CAAgB,QAAhB,CAAV;AACD;;AACDtB,MAAAA,UAAU,CAACa,IAAD,CAAV;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AAEDU,IAAAA,SAAS;AACN,GAdM,EAcJ,EAdI,CAAT;AAeA,sBACI;AAAA,4BACJ;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cADA,eAIM;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGb,OAAO,CAACwB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,8BACE;AACE,YAAA,SAAS,EAAG,UACVtB,cAAc,KAAKsB,KAAnB,GAA2B,UAA3B,GAAwC,EACzC,EAHH;AAAA,mCAKE;AACE,cAAA,GAAG,EAAG,6BAA4BD,MAAO,EAD3C;AAEE,cAAA,GAAG,EAAC,QAFN;AAIE,cAAA,OAAO,EAAE,MAAMpB,iBAAiB,CAACqB,KAAD;AAJlC,eAGOD,MAHP;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD,SAfA;AADH;AAAA;AAAA;AAAA;AAAA,cAJN;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAwBJ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAxBI;AAAA,kBADJ;AA2BH;;GAxDuB5B,gB;UAELL,W;;;KAFKK,gB","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {ToastContainer} from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Buffer from 'Buffer'\r\nimport axios from 'axios';\r\nimport { setAvatarRoute } from '../utils/APIRoutes.js';\r\n\r\nexport default function SetAvatarProfile () {\r\n  const api = `https://api.multiavatar.com/4645646`;\r\n  const navigate = useNavigate();\r\n  const [avatars, setAvatars] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n    const toastOptions= {\r\n        autoClose:8000,\r\n        pauseOnOver:true,\r\n        draggable:true,\r\n        theme:\"light\",\r\n        \r\n      }\r\n    const setProfilePicture=async()=>{}\r\n    useEffect(() => {async function fetchData() {\r\n        const data = [];\r\n        for (let i = 0; i < 4; i++) {\r\n          const image = await axios.get(\r\n            `${api}/${Math.round(Math.random() * 1000)}`\r\n          );\r\n          const buffer = new Buffer(image.data);\r\n          data.push(buffer.toString(\"base64\"));\r\n        }\r\n        setAvatars(data);\r\n        setIsLoading(false);\r\n    }\r\n        \r\n    fetchData();\r\n      }, []);\r\n    return ( \r\n        <>\r\n    <div>\r\n    <div className=\"title-container\">\r\n            <h1>Pick an Avatar as your profile picture</h1>\r\n          </div>\r\n          <div className=\"avatars\">\r\n            {avatars.map((avatar, index) => {\r\n              return (\r\n                <div\r\n                  className={`avatar ${\r\n                    selectedAvatar === index ? \"selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={`data:image/png+xml;base64,${avatar}`}\r\n                    alt=\"avatar\"\r\n                    key={avatar}\r\n                    onClick={() => setSelectedAvatar(index)}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n    </div>\r\n    <ToastContainer/>\r\n    </>);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}