{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Bureau\\\\DossiersImportants\\\\ChatApp\\\\public\\\\src\\\\pages\\\\SetAvatar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Buffer from 'Buffer';\nimport axios from 'axios';\nimport { setAvatarRoute } from '../utils/APIRoutes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatarProfile() {\n  _s();\n\n  const api = `https://api.multiavatar.com/4645646`;\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    autoClose: 8000,\n    pauseOnOver: true,\n    draggable: true,\n    theme: \"light\"\n  };\n\n  const setProfilePicture = async () => {};\n\n  useEffect(() => {\n    async function Datatest() {\n      const data = [];\n\n      for (let i = 0; i < 4; i++) {\n        const image = await axios.get(`${api}/${Math.random() * 1000}`);\n        const buffer = new Buffer(image.data);\n        data.push(buffer.toString('base64'));\n      }\n\n      setAvatars(data);\n      setIsLoading(false);\n    }\n\n    Datatest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an avatar as your profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${avatar}`,\n              alt: \"avatar\",\n              onClick: () => setSelectedAvatar(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SetAvatarProfile, \"Vf3bLGWNS+p8++1hLS4MtcrCzCs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SetAvatarProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetAvatarProfile\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Bureau/DossiersImportants/ChatApp/public/src/pages/SetAvatar.jsx"],"names":["React","useState","useEffect","useNavigate","ToastContainer","Buffer","axios","setAvatarRoute","SetAvatarProfile","api","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","autoClose","pauseOnOver","draggable","theme","setProfilePicture","Datatest","data","i","image","get","Math","random","buffer","push","toString","map","avatar","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,OAAO,uCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,eAAe,SAASC,gBAAT,GAA6B;AAAA;;AACxC,QAAMC,GAAG,GAAI,qCAAb;AACF,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAACgB,SAAD,CAApD;AACE,QAAMC,YAAY,GAAE;AAChBC,IAAAA,SAAS,EAAC,IADM;AAEhBC,IAAAA,WAAW,EAAC,IAFI;AAGhBC,IAAAA,SAAS,EAAC,IAHM;AAIhBC,IAAAA,KAAK,EAAC;AAJU,GAApB;;AAOA,QAAMC,iBAAiB,GAAC,YAAS,CAAE,CAAnC;;AACArB,EAAAA,SAAS,CAAC,MAAI;AAAC,mBAAesB,QAAf,GAAyB;AACpC,YAAMC,IAAI,GAAC,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,cAAMC,KAAK,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAW,GAAEnB,GAAI,IAAGoB,IAAI,CAACC,MAAL,KAAc,IAAK,EAAvC,CAApB;AACA,cAAMC,MAAM,GAAG,IAAI1B,MAAJ,CAAWsB,KAAK,CAACF,IAAjB,CAAf;AACAA,QAAAA,IAAI,CAACO,IAAL,CAAUD,MAAM,CAACE,QAAP,CAAgB,QAAhB,CAAV;AACH;;AACDrB,MAAAA,UAAU,CAACa,IAAD,CAAV;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACDU,IAAAA,QAAQ;AACP,GAXQ,EAWP,EAXO,CAAT;AAYA,sBACI;AAAA,4BACJ;AAAA,8BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACIb,OAAO,CAACuB,GAAR,CAAY,CAACC,MAAD,EAAQC,KAAR,KAAgB;AACxB,8BACI;AAAiB,YAAA,SAAS,EAAG,UAASrB,cAAc,KAAGqB,KAAjB,GAAyB,UAAzB,GAAoC,EAAG,EAA7E;AAAA,mCACJ;AAAK,cAAA,GAAG,EAAG,yBAAwBD,MAAO,EAA1C;AAA6C,cAAA,GAAG,EAAC,QAAjD;AAA0D,cAAA,OAAO,EAAE,MAAInB,iBAAiB,CAACoB,KAAD;AAAxF;AAAA;AAAA;AAAA;AAAA;AADI,aAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAIH,SALD;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAeJ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAfI;AAAA,kBADJ;AAkBH;;GA5CuB5B,gB;UAELL,W;;;KAFKK,gB","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {ToastContainer} from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Buffer from 'Buffer'\r\nimport axios from 'axios';\r\nimport { setAvatarRoute } from '../utils/APIRoutes.js';\r\n\r\nexport default function SetAvatarProfile () {\r\n    const api = `https://api.multiavatar.com/4645646`;\r\n  const navigate = useNavigate();\r\n  const [avatars, setAvatars] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n    const toastOptions= {\r\n        autoClose:8000,\r\n        pauseOnOver:true,\r\n        draggable:true,\r\n        theme:\"light\",\r\n        \r\n      }\r\n    const setProfilePicture=async()=>{}\r\n    useEffect(()=>{async function Datatest(){\r\n        const data=[];\r\n        for (let i = 0; i < 4; i++) {\r\n            const image = await axios.get(`${api}/${Math.random()*1000}`);\r\n            const buffer = new Buffer(image.data)\r\n            data.push(buffer.toString('base64'))\r\n        }\r\n        setAvatars(data);\r\n        setIsLoading(false);\r\n    }\r\n    Datatest(); \r\n    },[])\r\n    return ( \r\n        <>\r\n    <div>\r\n        <div >\r\n            <h1>Pick an avatar as your profile picture</h1>\r\n        </div>\r\n        <div className=\"avatars\">{\r\n            avatars.map((avatar,index)=>{\r\n                return(\r\n                    <div key={index} className={`avatar ${selectedAvatar===index ? \"selected\":\"\"}`}>\r\n                <img src={`data:image/png;base64,${avatar}`} alt=\"avatar\" onClick={()=>setSelectedAvatar(index)}/>\r\n            </div>)       \r\n            })\r\n        }\r\n        </div>\r\n    </div>\r\n    <ToastContainer/>\r\n    </>);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}